<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="RemoteInterface" Id="{fe776dd4-d89e-453c-b0f6-c2a6758265ef}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'c++_compatible'}
FUNCTION_BLOCK RemoteInterface IMPLEMENTS ITcIoUdpProtocolRecv
VAR_INPUT
	txUdpData			: TxRemote;
END_VAR
VAR_OUTPUT
	rxUdpData			: RxRemote;
END_VAR
VAR
	// UDP connection
	{attribute 'TcInitSymbol'}
	oid					: OTCID;
	ipUdp 				: ITcIoUdpProtocol;
	recvCounter			: UDINT := 0;
	sendCounter			: UDINT := 0;
	remoteUdpPort		: UINT;
	remoteIpAddr		: UDINT;
	localUdpPort		: UINT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Update UDP data
UpdateUDP();]]></ST>
    </Implementation>
    <Method Name="FB_exit" Id="{012b5a9e-ce60-474b-a48d-89190c9ea343}">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (NOT bInCopyCode AND ipUdp <> 0) THEN //Shutdown
	ipUdp.UnregisterReceiver(localUdpPort);
	FW_SafeRelease(ADR(ipUdp));
	FB_exit := TRUE;
ELSE
	FB_exit := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{b10b65a4-4eae-4d2e-8025-8f9ef5d23908}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains 		: BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode 		: BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	_remoteIpAddr		: UDINT;
	_remoteUdpPort		: UINT;
	_localUdpPort		: UINT;
END_VAR

VAR
	ipSrv				: ITComObjectServer;
	hr 					: HRESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Initilize parameters
remoteIpAddr := _remoteIpAddr;
remoteUdpPort := _remoteUdpPort;
localUdpPort := _localUdpPort;

IF NOT bInCopyCode THEN // no online change
	IF ipUdp = 0 THEN
	    hr := FW_ObjMgr_GetObjectInstance(oid:=oid, iid:=TC_GLOBAL_IID_LIST.IID_ITcIoUdpProtocol, pipUnk:=ADR(ipUdp) );
		
		IF ( SUCCEEDED(hr) AND ipUdp.RegisterReceiver(localUdpPort, THIS^) = 0 ) THEN //open port
			FB_init := TRUE;
		ELSE
			FB_init := FALSE;			
			FW_SafeRelease(ADR(ipUdp));
		END_IF				
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_reinit" Id="{3cc5f4d4-4165-4dc1-97d2-8918dc40c7ec}">
      <Declaration><![CDATA[METHOD FB_reinit : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (ipUdp <> 0) THEN 
  ipUdp.RegisterReceiver(localUdpPort, THIS^);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReceiveData" Id="{7fb2c185-9018-4361-9e65-8897b9a4d460}">
      <Declaration><![CDATA[{attribute 'c++_compatible'}
{attribute 'signature_flag' := '33554688'}
{attribute 'pack_mode' := '4'}
{attribute 'show'}
{attribute 'minimal_input_size' := '4'}
{attribute 'checksuperglobal'}

METHOD ReceiveData : HRESULT
VAR_INPUT
	ipAddr	: UDINT;
	udpDestPort	: UINT;
	udpSrcPort	: UINT;
	nData	: UDINT;
	pData	: PVOID;
	pVlan	: POINTER TO ETYPE_VLAN_HEADER := 0;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (nData = SIZEOF(rxUdpData)) THEN
	// Copy recieved pData to rxUdpData
	MEMCPY(ADR(rxUdpData), pData, nData);
	
	// Count number of recieved UDP packets
	recvCounter := recvCounter + 1;
END_IF;	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TcAddRef" Id="{91ee455e-677b-46ea-b780-dfd056ecaae6}">
      <Declaration><![CDATA[{attribute 'c++_compatible'}
{attribute 'signature_flag' := '33554688'}
{attribute 'pack_mode' := '4'}
{attribute 'show'}
{attribute 'minimal_input_size' := '4'}
{attribute 'checksuperglobal'}

METHOD TcAddRef : UDINT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="TcQueryInterface" Id="{671d4397-7454-4d46-adfe-e99bd20d30ed}">
      <Declaration><![CDATA[{attribute 'c++_compatible'}
{attribute 'signature_flag' := '33554688'}
{attribute 'pack_mode' := '4'}
{attribute 'show'}
{attribute 'minimal_input_size' := '4'}
{attribute 'checksuperglobal'}

METHOD TcQueryInterface : HRESULT
VAR_INPUT
	iid	: REFERENCE TO IID;
	pipItf	: POINTER TO PVOID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="TcRelease" Id="{1a6ffbff-4e9d-4aaa-a182-0ad3cde0e20e}">
      <Declaration><![CDATA[{attribute 'c++_compatible'}
{attribute 'signature_flag' := '33554688'}
{attribute 'pack_mode' := '4'}
{attribute 'show'}
{attribute 'minimal_input_size' := '4'}
{attribute 'checksuperglobal'}

METHOD TcRelease : UDINT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="UpdateUDP" Id="{6099c801-3370-442b-b3c9-50d35e9cdd95}">
      <Declaration><![CDATA[METHOD PRIVATE UpdateUDP : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Send data to remote UDP server
IF ipUdp <> 0 THEN
	// Send data to remote UDP server
	ipUdp.SendData(remoteIpAddr, remoteUdpPort, localUdpPort, SIZEOF(txUdpData), ADR(txUdpData), TRUE, 0);
	sendCounter := sendCounter + 1;
	
	// Check for recieved data
	ipUdp.CheckReceived();
END_IF

]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="RemoteInterface">
      <LineId Id="519" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="RemoteInterface.FB_exit">
      <LineId Id="7" Count="5" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="RemoteInterface.FB_init">
      <LineId Id="35" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="16" Count="12" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="RemoteInterface.FB_reinit">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="RemoteInterface.ReceiveData">
      <LineId Id="19" Count="1" />
      <LineId Id="25" Count="0" />
      <LineId Id="21" Count="3" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="RemoteInterface.TcAddRef">
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="RemoteInterface.TcQueryInterface">
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="RemoteInterface.TcRelease">
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="RemoteInterface.UpdateUDP">
      <LineId Id="6" Count="7" />
      <LineId Id="27" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>