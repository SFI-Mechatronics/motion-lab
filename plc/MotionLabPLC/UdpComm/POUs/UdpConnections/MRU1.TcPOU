<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="MRU1" Id="{bc58be35-4d76-4ddf-bb8d-a3823b2a964f}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MRU1
VAR
	
	buffer			: ARRAY [1..1024] OF BYTE;
	
	NULL			: PVOID;
	UdpIO			: UdpServer(7551, 0, NULL, SIZEOF(feedback), ADR(buffer));
		
	temp			: ARRAY [0..3] OF BYTE;
	N				: DINT;	
END_VAR

VAR_OUTPUT
	feedback		: MruFeedback;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[
UdpIO();

feedback.mruOK := buffer[1];
feedback.dataLength := buffer[2];
feedback.token := buffer[3];

// Big to little endian conversions
N := 1;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3]; 
MEMCPY(ADR(feedback.Temperature), ADR(temp), 4);

N := 2;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3]; 
MEMCPY(ADR(feedback.PosMru_D), ADR(temp), 4);

N := 3;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.VelMru_D), ADR(temp), 4);

N := 4;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AccMru_D), ADR(temp), 4);

N := 5;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AngRate_D), ADR(temp), 4);

N := 6;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.Roll), ADR(temp), 4);

N := 7;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.Pitch), ADR(temp), 4);

N := 8;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.Yaw), ADR(temp), 4);

N := 9;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AngRate_R), ADR(temp), 4);

N := 10;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AngRate_P), ADR(temp), 4);

N := 11;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AngRate_Y), ADR(temp), 4);

N := 12;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AngAcc_R), ADR(temp), 4);

N := 13;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AngAcc_P), ADR(temp), 4);

N := 14;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AngAcc_Y), ADR(temp), 4);

N := 15;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.VelMru_R), ADR(temp), 4);

N := 16;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.VelMru_P), ADR(temp), 4);

N := 17;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.VelMru_Y), ADR(temp), 4);

N := 18;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AccMru_R), ADR(temp), 4);

N := 19;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AccMru_P), ADR(temp), 4);

N := 20;
temp[3] := buffer[N*4];
temp[2] := buffer[N*4 + 1];
temp[1] := buffer[N*4 + 2];
temp[0] := buffer[N*4 + 3];
MEMCPY(ADR(feedback.AccMru_Y), ADR(temp), 4);


]]></ST>
    </Implementation>
    <LineIds Name="MRU1">
      <LineId Id="46" Count="5" />
      <LineId Id="54" Count="142" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>