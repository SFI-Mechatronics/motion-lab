<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="EM1500" Id="{f4d547fd-021c-4c08-9d60-b0346b71a862}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM EM1500
VAR	
	tx_data		: StewartControl;
	rx_data		: StewartFeedback;
	UdpIO		: UdpClient(3232258591, 50031, 50041, SIZEOF(tx_data), ADR(tx_data), SIZEOF(rx_data), ADR(rx_data));
	
	pi			: REAL := 3.141592653589793;
	
	euler2body  : EulerToBody;
END_VAR

VAR_INPUT
	cmnd 		: DINT := 0;
	control		: RemoteControlStewart;
END_VAR

VAR_OUTPUT
	feedback	: RemoteFeedbackStewart;
END_VAR





	


]]></Declaration>
    <Implementation>
      <ST><![CDATA[

// Assign control to local tx_data
tx_data.CMND := cmnd;

// Add maximum limit to control input
tx_data.X_EXTRA := LIMIT(-0.3, control.surge, 0.3);
tx_data.Y_EXTRA := LIMIT(-0.3, control.sway, 0.3);
tx_data.Z_EXTRA := LIMIT(-0.3, control.heave, 0.3);

tx_data.PHI_EXTRA := LIMIT(-10.0/180.0*pi, control.roll, 10.0/180.0*pi);
tx_data.THETA_EXTRA := LIMIT(-10.0/180.0*pi, control.pitch, 10.0/180.0*pi);
tx_data.PSI_EXTRA := LIMIT(-10.0/180.0*pi, control.yaw, 10.0/180.0*pi);

// Update control counter
tx_data.COUNT := tx_data.COUNT + 1;

// Exchange data
UdpIO();

// Transform from phi_t and phi_tt to w and w_t
euler2body.roll := rx_data.Actual_platform_position_roll;
euler2body.pitch := rx_data.Actual_platform_position_pitch;
euler2body.yaw := rx_data.Actual_platform_position_yaw;

euler2body.roll_t := rx_data.Actual_platform_velocity_roll;
euler2body.pitch_t := rx_data.Actual_platform_velocity_pitch;
euler2body.yaw_t := rx_data.Actual_platform_velocity_yaw;

euler2body.roll_tt := rx_data.Actual_platform_acceleration_roll;
euler2body.pitch_tt := rx_data.Actual_platform_acceleration_pitch;
euler2body.yaw_tt := rx_data.Actual_platform_acceleration_yaw;

euler2body();

// Assign feedback data
feedback.surge := rx_data.Actual_platform_position_surge;
feedback.sway := rx_data.Actual_platform_position_sway;
feedback.heave := rx_data.Actual_platform_position_heave;
feedback.roll := rx_data.Actual_platform_position_roll;
feedback.pitch := rx_data.Actual_platform_position_pitch;
feedback.yaw := rx_data.Actual_platform_position_yaw;

feedback.surge_t := rx_data.Actual_platform_velocity_surge;
feedback.sway_t := rx_data.Actual_platform_velocity_sway;
feedback.heave_t := rx_data.Actual_platform_velocity_heave;
feedback.wx := euler2body.wx;
feedback.wy := euler2body.wy;
feedback.wz := euler2body.wz;

feedback.surge_tt := rx_data.Actual_platform_acceleration_surge;
feedback.sway_tt := rx_data.Actual_platform_acceleration_sway;
feedback.heave_tt := rx_data.Actual_platform_acceleration_heave;
feedback.wx_t := euler2body.wx_t;
feedback.wy_t := euler2body.wy_t;
feedback.wz_t := euler2body.wz_t;

feedback.L1 := rx_data.Actual_position_actuator_1;
feedback.L2 := rx_data.Actual_position_actuator_2;
feedback.L3 := rx_data.Actual_position_actuator_3;
feedback.L4 := rx_data.Actual_position_actuator_4;
feedback.L5 := rx_data.Actual_position_actuator_5;
feedback.L6 := rx_data.Actual_position_actuator_6;
]]></ST>
    </Implementation>
    <LineIds Name="EM1500">
      <LineId Id="169" Count="0" />
      <LineId Id="92" Count="6" />
      <LineId Id="135" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="102" Count="1" />
      <LineId Id="105" Count="1" />
      <LineId Id="209" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="196" Count="12" />
      <LineId Id="109" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="171" Count="4" />
      <LineId Id="177" Count="0" />
      <LineId Id="195" Count="0" />
      <LineId Id="214" Count="11" />
      <LineId Id="253" Count="6" />
      <LineId Id="111" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>