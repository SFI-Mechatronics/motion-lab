<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="F_VelocityBoundary" Id="{07115d0a-546e-4a5d-a4c2-103609a8a10f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION F_VelocityBoundary : ARRAY [0..1] OF LREAL;
VAR_INPUT
	q : LREAL; // Current position
	qMin : LREAL; // Min position
	qMax : LREAL; // Max position
	V : LREAL := 0.1; // Max allowed velocity
	A : LREAL := 1; // max allowed acceleration
	Ts : LREAL := 0.005; // Task time step
	
END_VAR
VAR
	qMin_t : LREAL;
	qMax_t : LREAL;
	
	t0, t1, t2 : LREAL; 
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Ensure Ts is positive
Ts := ABS(Ts); 

// Ensure that V and A is positive
V := ABS(V);
A := ABS(A);

// Ensure q is in [qMin, qMax]
q := MAX(q, qMin);
q := MIN(q, qMax);

// Lower Boundary       
t0 := (qMin - q)/Ts;
t1 := -V;
t2 := -SQRT(ABS(2*A*(q - qMin)));

qMin_t := MAX(t0, MAX(t1, t2));

// Upper Boundary
t0 := (qMax - q)/Ts;
t1 := V;
t2 := SQRT(ABS(2*A*(qMax - q)));

qMax_t := MIN(t0, MIN(t1, t2));

// Return velocity bound
F_VelocityBoundary[0] := qMin_t;
F_VelocityBoundary[1] := qMax_t;
]]></ST>
    </Implementation>
    <LineIds Name="F_VelocityBoundary">
      <LineId Id="46" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="19" Count="21" />
      <LineId Id="42" Count="1" />
      <LineId Id="7" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="67" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>