<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.7">
  <POU Name="invNxN" Id="{4e074b90-3b15-4133-97f5-a60879cf0cc6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK invNxN
VAR_INPUT
	x: ARRAY[0..120] OF LREAL;
END_VAR
VAR_OUTPUT
	y: ARRAY[0..120] OF LREAL;
END_VAR
VAR
	b_p: ARRAY[0..10] OF SINT;
	A: ARRAY[0..120] OF LREAL;
	ipiv: ARRAY[0..10] OF SINT;
	b_j: DINT;
	ix: DINT;
	smax: LREAL;
	b_s: LREAL;
	b_k: DINT;
	iy: DINT;
	c_ix: DINT;
	b_d: DINT;
	ijA: DINT;
	pipk: DINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

FOR b_k := 0 TO 120 DO 
    y[b_k] := 0.0;
    A[b_k] := x[b_k];
END_FOR;


FOR b_k := 0 TO 10 DO 
    ipiv[b_k] := DINT_TO_SINT(1 + b_k);
END_FOR;


FOR b_j := 0 TO 9 DO 
    pipk := b_j * 12;
    iy := 0;
    ix := pipk;
    smax := ABS(A[pipk]);
    b_k := 2;
    WHILE b_k <= (11 - b_j) DO
        ix := ix + 1;
        b_s := ABS(A[ix]);

        IF b_s > smax THEN 
            iy := b_k - 1;
            smax := b_s;
        END_IF;

        b_k := b_k + 1;
    END_WHILE;

    IF A[pipk + iy] <> 0.0 THEN 

        IF iy <> 0 THEN 
            iy := b_j + iy;
            ipiv[b_j] := DINT_TO_SINT(iy + 1);
            ix := b_j;

            FOR b_k := 0 TO 10 DO 
                smax := A[ix];
                A[ix] := A[iy];
                A[iy] := smax;
                ix := ix + 11;
                iy := iy + 11;
            END_FOR;

        END_IF;

        iy := (pipk - b_j) + 11;
        ix := pipk + 1;
        WHILE (ix + 1) <= iy DO
            A[ix] := A[ix] / A[pipk];
            ix := ix + 1;
        END_WHILE;
    END_IF;

    iy := pipk;
    ix := pipk + 11;
    b_k := 1;
    WHILE b_k <= (10 - b_j) DO
        smax := A[ix];

        IF A[ix] <> 0.0 THEN 
            c_ix := pipk + 1;
            b_d := (iy - b_j) + 22;
            ijA := 12 + iy;
            WHILE (ijA + 1) <= b_d DO
                A[ijA] := (A[c_ix] * ( -smax)) + A[ijA];
                c_ix := c_ix + 1;
                ijA := ijA + 1;
            END_WHILE;
        END_IF;

        ix := ix + 11;
        iy := iy + 11;
        b_k := b_k + 1;
    END_WHILE;
END_FOR;


FOR b_k := 0 TO 10 DO 
    b_p[b_k] := DINT_TO_SINT(1 + b_k);
END_FOR;


FOR b_j := 0 TO 9 DO 

    IF SINT_TO_DINT(ipiv[b_j]) > (1 + b_j) THEN 
        b_k := SINT_TO_DINT(ipiv[b_j]) - 1;
        pipk := SINT_TO_DINT(b_p[b_k]);
        b_p[b_k] := b_p[b_j];
        b_p[b_j] := DINT_TO_SINT(pipk);
    END_IF;

END_FOR;


FOR b_j := 0 TO 10 DO 
    b_k := SINT_TO_DINT(b_p[b_j]) - 1;
    y[b_j + (11 * b_k)] := 1.0;
    iy := b_j;
    WHILE (iy + 1) < 12 DO

        IF y[(11 * b_k) + iy] <> 0.0 THEN 
            ix := iy + 1;
            WHILE (ix + 1) < 12 DO
                y[ix + (11 * b_k)] := y[(11 * b_k) + ix] - (y[(11 * b_k) + iy] * A[(11 * iy) + ix]);
                ix := ix + 1;
            END_WHILE;
        END_IF;

        iy := iy + 1;
    END_WHILE;
END_FOR;


FOR b_j := 0 TO 10 DO 
    pipk := 11 * b_j;

    FOR iy := 10 TO 0 BY -1 DO 
        ix := 11 * iy;
        b_k := iy + pipk;

        IF y[b_k] <> 0.0 THEN 
            y[b_k] := y[iy + pipk] / A[iy + ix];
            b_k := 0;
            WHILE (b_k + 1) <= iy DO
                c_ix := b_k + pipk;
                y[c_ix] := y[c_ix] - (y[iy + pipk] * A[b_k + ix]);
                b_k := b_k + 1;
            END_WHILE;
        END_IF;

    END_FOR;

END_FOR;

]]></ST>
    </Implementation>
    <LineIds Name="invNxN">
      <LineId Id="3" Count="136" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>